// Generated by CoffeeScript 2.4.1
var Converter;

Converter = class Converter {
  constructor(inp, outp) {
    this.arr = this.solve(inp, outp);
  }

  convert(x, y) {
    var a, b, c, d, e, f;
    [a, b, c, d, e, f] = this.arr;
    return [a * x + b * y + c, d * x + e * y + f];
  }

  solve(inp, outp) {
    var a, b, c, d, e, eqns, f;
    [a, b, c, d, e, f] = inp;
    eqns = [];
    eqns.push([a, b, 1, 0, 0, 0]);
    eqns.push([0, 0, 0, a, b, 1]);
    eqns.push([c, d, 1, 0, 0, 0]);
    eqns.push([0, 0, 0, c, d, 1]);
    eqns.push([e, f, 1, 0, 0, 0]);
    eqns.push([0, 0, 0, e, f, 1]);
    return this.gauss(eqns, outp);
  }

  // https://github.com/itsravenous/gaussian-elimination/blob/master/gauss.js
  gauss(A, x) {
    var c, i, j, k, l, len, len1, len2, len3, len4, len5, len6, len7, m, maxEl, maxRow, n, o, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, res, s, t;
    n = A.length;
    ref = range(n);
    for (l = 0, len = ref.length; l < len; l++) {
      i = ref[l];
      A[i].push(x[i]);
    }
    ref1 = range(n);
    for (m = 0, len1 = ref1.length; m < len1; m++) {
      i = ref1[m];
      maxEl = Math.abs(A[i][i]);
      maxRow = i;
      ref2 = range(i + 1, n);
      for (o = 0, len2 = ref2.length; o < len2; o++) {
        k = ref2[o];
        if (maxEl < Math.abs(A[k][i])) {
          maxEl = Math.abs(A[k][i]);
          maxRow = k;
        }
      }
      ref3 = range(i, n + 1);
      for (p = 0, len3 = ref3.length; p < len3; p++) {
        k = ref3[p];
        [A[maxRow][k], A[i][k]] = [A[i][k], A[maxRow][k]];
      }
      ref4 = range(i + 1, n);
      for (q = 0, len4 = ref4.length; q < len4; q++) {
        k = ref4[q];
        c = -A[k][i] / A[i][i];
        ref5 = range(i, n + 1);
        for (r = 0, len5 = ref5.length; r < len5; r++) {
          j = ref5[r];
          A[k][j] = i === j ? 0 : A[k][j] + c * A[i][j];
        }
      }
    }
    res = range(n).map(function() {
      return 0;
    });
    ref6 = range(n - 1, -1);
    for (s = 0, len6 = ref6.length; s < len6; s++) {
      i = ref6[s];
      res[i] = A[i][n] / A[i][i];
      ref7 = range(i - 1, -1);
      for (t = 0, len7 = ref7.length; t < len7; t++) {
        k = ref7[t];
        A[k][n] -= A[k][i] * res[i];
      }
    }
    return res;
  }

};

// bmp = [338,1491, 4299,1948, 2963,5596] # x1,y1, x2,y2, x3,y3
// wgs = [18.150709,59.285624, 18.179902,59.283048, 18.168739,59.269496] # lng1,lat1, lng2,lat2, lng3,lat3

// b2w = new Converter bmp,wgs
// assert [18.150709, 59.28562399999999], b2w.convert bmp[0],bmp[1]
// assert [18.179902, 59.283048], b2w.convert bmp[2],bmp[3]
// assert [18.168739, 59.269496], b2w.convert bmp[4],bmp[5]

// w2b = new Converter wgs,bmp
// assert [338.00000000023283, 1491], w2b.convert wgs[0],wgs[1]
// assert [4299, 1948],  w2b.convert wgs[2],wgs[3]
// assert [2963, 5595.999999998137], w2b.convert wgs[4],wgs[5]

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVydGVyLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXGNvbnZlcnRlci5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUE7O0FBQU0sWUFBTixNQUFBLFVBQUE7RUFDQyxXQUFjLENBQUMsR0FBRCxFQUFLLElBQUwsQ0FBQTtJQUFjLElBQUMsQ0FBQSxHQUFELEdBQU8sSUFBQyxDQUFBLEtBQUQsQ0FBTyxHQUFQLEVBQVcsSUFBWDtFQUFyQjs7RUFFZCxPQUFVLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQTtBQUNULFFBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQTtJQUFBLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMLEVBQU8sQ0FBUCxFQUFTLENBQVQsRUFBVyxDQUFYLENBQUEsR0FBZ0IsSUFBQyxDQUFBO1dBQ2pCLENBQUMsQ0FBQSxHQUFFLENBQUYsR0FBSSxDQUFBLEdBQUUsQ0FBTixHQUFRLENBQVQsRUFBWSxDQUFBLEdBQUUsQ0FBRixHQUFJLENBQUEsR0FBRSxDQUFOLEdBQVEsQ0FBcEI7RUFGUzs7RUFJVixLQUFRLENBQUMsR0FBRCxFQUFLLElBQUwsQ0FBQTtBQUNQLFFBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxJQUFBLEVBQUE7SUFBQSxDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssQ0FBTCxFQUFPLENBQVAsRUFBUyxDQUFULEVBQVcsQ0FBWCxDQUFBLEdBQWdCO0lBQ2hCLElBQUEsR0FBTztJQUNQLElBQUksQ0FBQyxJQUFMLENBQVUsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixDQUFWO0lBQ0EsSUFBSSxDQUFDLElBQUwsQ0FBVSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFB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O0lBQUgsQ0FBYjtBQUNOO0lBQUEsS0FBQSx3Q0FBQTs7TUFDQyxHQUFJLENBQUEsQ0FBQSxDQUFKLEdBQVMsQ0FBRSxDQUFBLENBQUEsQ0FBRyxDQUFBLENBQUEsQ0FBTCxHQUFVLENBQUUsQ0FBQSxDQUFBLENBQUcsQ0FBQSxDQUFBO0FBQ3hCO01BQUEsS0FBQSx3Q0FBQTs7UUFDQyxDQUFFLENBQUEsQ0FBQSxDQUFHLENBQUEsQ0FBQSxDQUFMLElBQVcsQ0FBRSxDQUFBLENBQUEsQ0FBRyxDQUFBLENBQUEsQ0FBTCxHQUFVLEdBQUksQ0FBQSxDQUFBO01BRDFCO0lBRkQ7V0FLQTtFQTNCTzs7QUFuQlQ7O0FBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBDb252ZXJ0ZXJcclxuXHRjb25zdHJ1Y3RvciA6IChpbnAsb3V0cCkgLT4gQGFyciA9IEBzb2x2ZSBpbnAsb3V0cFxyXG5cclxuXHRjb252ZXJ0IDogKHgseSkgLT5cclxuXHRcdFthLGIsYyxkLGUsZl0gPSBAYXJyXHJcblx0XHRbYSp4K2IqeStjLCBkKngrZSp5K2ZdXHJcblxyXG5cdHNvbHZlIDogKGlucCxvdXRwKSAtPlxyXG5cdFx0W2EsYixjLGQsZSxmXSA9IGlucFxyXG5cdFx0ZXFucyA9IFtdXHJcblx0XHRlcW5zLnB1c2ggW2EsIGIsIDEsIDAsIDAsIDBdXHJcblx0XHRlcW5zLnB1c2ggWzAsIDAsIDAsIGEsIGIsIDFdXHJcblx0XHRlcW5zLnB1c2ggW2MsIGQsIDEsIDAsIDAsIDBdXHJcblx0XHRlcW5zLnB1c2ggWzAsIDAsIDAsIGMsIGQsIDFdXHJcblx0XHRlcW5zLnB1c2ggW2UsIGYsIDEsIDAsIDAsIDBdXHJcblx0XHRlcW5zLnB1c2ggWzAsIDAsIDAsIGUsIGYsIDFdXHJcblx0XHRAZ2F1c3MgZXFucyxvdXRwXHJcblxyXG5cdCMgaHR0cHM6Ly9naXRodWIuY29tL2l0c3JhdmVub3VzL2dhdXNzaWFuLWVsaW1pbmF0aW9uL2Jsb2IvbWFzdGVyL2dhdXNzLmpzXHJcblx0Z2F1c3MgOiAoQSwgeCkgLT5cclxuXHRcdG4gPSBBLmxlbmd0aFxyXG5cdFx0Zm9yIGkgaW4gcmFuZ2UgblxyXG5cdFx0XHRBW2ldLnB1c2ggeFtpXVxyXG5cclxuXHRcdGZvciBpIGluIHJhbmdlIG4gXHJcblx0XHRcdG1heEVsID0gTWF0aC5hYnMgQVtpXVtpXVxyXG5cdFx0XHRtYXhSb3cgPSBpXHJcblx0XHRcdGZvciBrIGluIHJhbmdlIGkrMSwgblxyXG5cdFx0XHRcdGlmIG1heEVsIDwgTWF0aC5hYnMgQVtrXVtpXVxyXG5cdFx0XHRcdFx0bWF4RWwgPSBNYXRoLmFicyBBW2tdW2ldXHJcblx0XHRcdFx0XHRtYXhSb3cgPSBrXHJcblxyXG5cdFx0XHRmb3IgayBpbiByYW5nZSBpLG4rMVxyXG5cdFx0XHRcdFtBW21heFJvd11ba10sIEFbaV1ba11dID0gW0FbaV1ba10sIEFbbWF4Um93XVtrXV1cclxuXHJcblx0XHRcdGZvciBrIGluIHJhbmdlIGkrMSwgblxyXG5cdFx0XHRcdGMgPSAtQVtrXVtpXSAvIEFbaV1baV1cclxuXHRcdFx0XHRmb3IgaiBpbiByYW5nZSBpLG4rMVxyXG5cdFx0XHRcdFx0QVtrXVtqXSA9IGlmIGk9PWogdGhlbiAwIGVsc2UgQVtrXVtqXSArIGMgKiBBW2ldW2pdXHJcblxyXG5cdFx0cmVzID0gcmFuZ2UobikubWFwIC0+IDBcclxuXHRcdGZvciBpIGluIHJhbmdlIG4tMSwgLTFcclxuXHRcdFx0cmVzW2ldID0gQVtpXVtuXSAvIEFbaV1baV1cclxuXHRcdFx0Zm9yIGsgaW4gcmFuZ2UgaS0xLCAtMVxyXG5cdFx0XHRcdEFba11bbl0gLT0gQVtrXVtpXSAqIHJlc1tpXVxyXG5cclxuXHRcdHJlc1xyXG5cclxuIyBibXAgPSBbMzM4LDE0OTEsIDQyOTksMTk0OCwgMjk2Myw1NTk2XSAjIHgxLHkxLCB4Mix5MiwgeDMseTNcclxuIyB3Z3MgPSBbMTguMTUwNzA5LDU5LjI4NTYyNCwgMTguMTc5OTAyLDU5LjI4MzA0OCwgMTguMTY4NzM5LDU5LjI2OTQ5Nl0gIyBsbmcxLGxhdDEsIGxuZzIsbGF0MiwgbG5nMyxsYXQzXHJcblxyXG4jIGIydyA9IG5ldyBDb252ZXJ0ZXIgYm1wLHdnc1xyXG4jIGFzc2VydCBbMTguMTUwNzA5LCA1OS4yODU2MjM5OTk5OTk5OV0sIGIydy5jb252ZXJ0IGJtcFswXSxibXBbMV1cclxuIyBhc3NlcnQgWzE4LjE3OTkwMiwgNTkuMjgzMDQ4XSwgYjJ3LmNvbnZlcnQgYm1wWzJdLGJtcFszXVxyXG4jIGFzc2VydCBbMTguMTY4NzM5LCA1OS4yNjk0OTZdLCBiMncuY29udmVydCBibXBbNF0sYm1wWzVdXHJcblxyXG4jIHcyYiA9IG5ldyBDb252ZXJ0ZXIgd2dzLGJtcFxyXG4jIGFzc2VydCBbMzM4LjAwMDAwMDAwMDIzMjgzLCAxNDkxXSwgdzJiLmNvbnZlcnQgd2dzWzBdLHdnc1sxXVxyXG4jIGFzc2VydCBbNDI5OSwgMTk0OF0sICB3MmIuY29udmVydCB3Z3NbMl0sd2dzWzNdXHJcbiMgYXNzZXJ0IFsyOTYzLCA1NTk1Ljk5OTk5OTk5ODEzN10sIHcyYi5jb252ZXJ0IHdnc1s0XSx3Z3NbNV1cclxuIl19
//# sourceURL=c:\github\gpsKarta\coffee\converter.coffee