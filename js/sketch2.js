// Generated by CoffeeScript 2.5.1
var DELAY, DIST, LIMIT, SCALE, TRACKED, VERSION, assert, crossHair, cx, cy, data, distbc, draw, fraction, general, gps, img, lastTouchEnded, locationUpdateFail, mapName, measure, messages, params, position, preload, released, setup, speed, start, startX, startY, state, storage, touchEnded, touchMoved, touchStarted, track, voices;

VERSION = 232;

DELAY = 100; // ms, delay between sounds

DIST = 1; // meter. Movement less than DIST makes no sound 1=walk. 5=bike

LIMIT = 20; // meter. Under this value is no bearing given.


// platform = window.navigator.platform # Win32|iPad|Linux

// DIGITS = 'zero one two three four five six seven eight niner'.split ' '
//BR = if platform in ['Win32','iPad'] then "\n" else '<br>'
//BR = "\n"

// http://www.bvsok.se/Kartor/Skolkartor/
// Högupplösta orienteringskartor: https://www.omaps.net
// https://omaps.blob.core.windows.net/map-excerpts/1fdc587ffdea489dbd69e29b10b48395.jpeg Nackareservatet utan kontroller.

//DISTLIST = [0,2,4,6,8,10,12,14,16,18,20,30,40,50,60,70,80,90,100, 120,140,160,180,200,250,300,350,400,450,500,600,700,800,900,1000,2000,3000,4000,5000,6000,7000,8000,9000,10000]
released = true;

mapName = ""; // t ex skarpnäck

params = null;

voices = null;

measure = {};

//surplus = 0
//pois = null
speed = 1;

distbc = 0;

start = new Date();

state = 0; // 0=uninitialized 1=normal 2=info

data = null;

img = null;

startX = 0;

startY = 0;

crossHair = null;

lastTouchEnded = new Date(); // to prevent double bounce in menus

fraction = function(x) {
  return x - int(x);
};

Array.prototype.clear = function() {
  return this.length = 0;
};

assert = function(a, b, msg = 'Assert failure') {
  return chai.assert.deepEqual(a, b, msg);
};

general = {
  COINS: true,
  DISTANCE: true,
  TRAIL: true,
  SECTOR: 10,
  PANSPEED: true
};

//loadGeneral = -> if localStorage.gpsKarta then general = _.extend general, JSON.parse localStorage.gpsKarta
//saveGeneral = -> localStorage.gpsKarta = JSON.stringify general
storage = null;

[cx, cy] = [
  0,
  0 // center (image coordinates)
];

SCALE = 1;

gps = null;

TRACKED = 5; // circles shows the user position

position = null; // gps position [x,y] # [lon,lat,alt,hhmmss]

track = []; // five latest GPS positions (bitmap coordinates)

messages = ['', '', '', '', '', ''];

preload = function() {
  params = getParameters();
  mapName = params.map || "2023-SommarS";
  // if params.debug then dump.active = params.debug == '1'
  return loadJSON(`data/${mapName}.json`, function(json) {
    var control, key, ref;
    data = json;
    console.log('adam', data);
    ref = data.controls;
    for (key in ref) {
      control = ref[key];
      control.push("");
      control.push(0);
      control.push(0);
    }
    return img = loadImage("data/" + data.map);
  });
};

//loadJSON "data/poi.json", (json) -> pois = json
locationUpdateFail = function(error) {
  if (error.code === error.PERMISSION_DENIED) {
    return messages = ['', '', '', '', '', 'Check location permissions'];
  }
};

window.speechSynthesis.onvoiceschanged = function() {
  return voices = window.speechSynthesis.getVoices();
};

setup = function() {
  var abc, bmp, canvas, dcs, wgs;
  canvas = createCanvas(innerWidth - 0.0, innerHeight); //-0.5
  canvas.position(0, 0); // hides text field used for clipboard copy.
  angleMode(DEGREES);
  SCALE = data.scale;
  dcs = data.controls;
  bmp = [dcs.A[0], dcs.A[1], dcs.B[0], dcs.B[1], dcs.C[0], dcs.C[1]];
  abc = data.ABC;
  wgs = [abc[1], abc[0], abc[3], abc[2], abc[5], abc[4]];
  return [cx, cy] = [img.width / 2, img.height / 2];
};

draw = function() {
  var x, y;
  bg(0, 1, 0);
  if (state === 0) {
    textSize(100);
    textAlign(CENTER, CENTER);
    x = width / 2;
    y = height / 2;
    text(mapName, x, y - 100);
    text('Version: ' + VERSION, x, y);
    text("Click to continue!", x, y + 200);
    return;
  }
  if (state === 1) {
    push();
    translate(width / 2, height / 2);
    scale(SCALE);
    image(img, round(-cx), round(-cy));
    return pop();
  }
};

touchStarted = function(event) {
  event.preventDefault();
  if (!released) {
    return;
  }
  speed = 1;
  released = false;
  startX = mouseX;
  startY = mouseY;
  return false;
};

touchMoved = function(event) {
  event.preventDefault();
  if (state === 1) {
    cx += speed * (startX - mouseX) / SCALE;
    cy += speed * (startY - mouseY) / SCALE;
    startX = mouseX;
    startY = mouseY;
  }
  return false;
};

touchEnded = function(event) {
  event.preventDefault();
  if (released) {
    return;
  }
  released = true;
  if (state === 0 || state === 2) {
    state = 1;
    return false;
  }
  return false;
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\gpsKarta\coffee\sketch2.coffee